--------------------------------------------------------------------------------
-- Dependencies
--------------------------------------------------------------------------------

local m_input = require("modules.input")
local m_persist = require("modules.persist")
local m_proxy = require("modules.proxy")

--------------------------------------------------------------------------------
-- Private Variables
--------------------------------------------------------------------------------

local _message_acquire_input_focus = hash("acquire_input_focus")
local _message_proxy_loaded = hash("proxy_loaded")

--------------------------------------------------------------------------------
-- Private Functions
--------------------------------------------------------------------------------

local function load_settings()
	local window_x, window_y, window_width, window_height = defos.get_window_size()
	local default_data =
	{
		fullscreen = false,
		maximized = false,
		window_x = window_x,
		window_y = window_y,
		window_width = window_width,
		window_height = window_height
	}
	local data = m_persist.load(m_persist.file_settings) or default_data
	if data.fullscreen then
		defos.set_fullscreen(true)
	elseif data.maximized then
		defos.set_maximized(true)
	else
		defos.set_window_size(data.window_x, data.window_y, data.window_width, data.window_height)
	end
end

local function save_settings()
	local window_x, window_y, window_width, window_height = defos.get_window_size()
	local data = m_persist.load(m_persist.file_settings) or {}
	data.fullscreen = defos.is_fullscreen()
	data.maximized = defos.is_maximized()
	data.window_x = window_x
	data.window_y = window_y
	data.window_width = window_width
	data.window_height = window_height
	m_persist.save(m_persist.file_settings, data)
end

--------------------------------------------------------------------------------
-- Public Functions
--------------------------------------------------------------------------------

function init(self)
	load_settings()
	msg.post("#", _message_acquire_input_focus)
	m_proxy.load(m_proxy.proxy_scene)
end

function final(self)
	save_settings()
end

function update(self, dt)
	m_input.update()
end

function on_message(self, message_id, message, sender)
	if message_id == _message_proxy_loaded then
		m_proxy.init(m_proxy.proxy_scene)
		m_proxy.enable(m_proxy.proxy_scene)
	end
end

function on_input(self, action_id, action)
	m_input.on_input(action_id, action)
	if m_input.get_state(m_input.input_fullscreen) == m_input.state_pressed then
		defos.toggle_fullscreen()
	end
end