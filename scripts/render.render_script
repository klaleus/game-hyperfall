--------------------------------------------------------------------------------
-- Dependencies
--------------------------------------------------------------------------------

local m_starly = require("starly.starly")

--------------------------------------------------------------------------------
-- Private Variables
--------------------------------------------------------------------------------

local _constant_buffer = render.constant_buffer()

local _predicates =
{
	tile =
	{
		handle = nil,
		tags = { hash("tile") }
	}
}

local _targets =
{
	default =
	{
		handle = render.RENDER_TARGET_DEFAULT,
		clear_buffers =
		{
			[graphics.BUFFER_TYPE_COLOR0_BIT] = vmath.vector4(),
			[graphics.BUFFER_TYPE_DEPTH_BIT] = 1,
			[graphics.BUFFER_TYPE_STENCIL_BIT] = 0
		}
	}
}

--------------------------------------------------------------------------------
-- Private Functions
--------------------------------------------------------------------------------

local function create_predicates()
	for _, predicate in pairs(_predicates) do
		predicate.handle = render.predicate(predicate.tags)
	end
end

local function draw_default_target()
	render.set_render_target(_targets.default.handle)
	render.clear(_targets.default.clear_buffers)
	render.enable_state(graphics.STATE_BLEND)
	render.draw(_predicates.tile.handle, { constants = _constant_buffer })
	render.disable_state(graphics.STATE_BLEND)
end

--------------------------------------------------------------------------------
-- Public Functions
--------------------------------------------------------------------------------

function init(self)
	create_predicates()
end

function update(self, dt)
	render.set_blend_func(graphics.BLEND_FACTOR_SRC_ALPHA, graphics.BLEND_FACTOR_ONE_MINUS_SRC_ALPHA)
	m_starly.activate(hash("/camera"))
	draw_default_target()
end